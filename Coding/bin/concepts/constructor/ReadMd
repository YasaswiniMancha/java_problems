In Java, a constructor is a block of codes similar to the method. It is called when an instance of the class is created.
 At the time of calling constructor, memory for the object is allocated in the memory.

It is a special type of method which is used to initialize the object.

Every time an object is created using the new() keyword, at least one constructor is called.

It calls a default constructor if there is no constructor available in the class. 
In such case, Java compiler provides a default constructor by default.

along with object creation, starting a thread, calling a method, etc.
You can perform any operation in the constructor as you perform in the method.

The constructor name should be the same as the class name
It cannot contain any return type
It can have all Access Modifiers are allowed (private, public, protected, default)
It Cannot have any Non Access Modifiers (final, static, abstract, synchronized)
No return statement is allowed
It can take any number of parameters

There are two types of constructors in Java: no-arg constructor, and parameterized constructor.

Note: It is called constructor because it constructs the values at the time of object creation. 
It is not necessary to write a constructor for a class. 
It is because java compiler creates a default constructor if your class doesn't have any.

Note: We can use access modifiers while declaring a constructor. 
It controls the object creation. In other words, we can have private, protected, public or default constructor in Java.

Types of Java constructors
----------------------------------
There are two types of constructors in Java:

1. Default constructor / no-args constructor : A constructor is called "Default Constructor" when it doesn't have any parameter.
                                               If there is no constructor in a class, compiler automatically creates a default constructor.
2. Parameterized constructor : A constructor which has a specific number of parameters is called a parameterized constructor to
                                           to provide different values to distinct objects. However, we can provide the same values also.
                                           

Constructor Overloading in Java
-----------------------------------
In Java, a constructor is just like a method but without return type. It can also be overloaded like Java methods.
Constructor overloading in Java is a technique of having more than one constructor with different parameter lists. 
They are arranged in a way that each constructor performs a different task. 
They are differentiated by the compiler by the number of parameters in the list and their types.


Java Copy Constructor
-----------------------------------
There is no copy constructor in Java. However, we can copy the values from one object to another like copy constructor in C++.

There are many ways to copy the values of one object into another in Java. They are:
By constructor.
Copying values without constructor i.e, By assigning the values of one object into another.
By clone() method of Object class.

